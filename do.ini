package main

import (
	"bufio"
	"fmt"
	"github.com/guoxuivy/spider"
	"os"
)

/**
 * 采集规则
 * 为每个采集规则发起一个协程
 * @param  {[type]} db *sql.DB       [description]
 * @return {[type]}    [description]
 */
var rule = [3]spider.Guize{
	{
		"http://gai001.com/gaizhuangzuoye/waiguangaizhuang/index.php?page=1",
		"10",
		"外观",
		&spider.Grep1{},
	},
	{
		"http://gai001.com/gaizhuangzuoye/dongligaizhuang/index.php?page=1",
		"10",
		"动力",
		&spider.Grep1{},
	},
	{
		"http://www.wanchezhijia.com/zhongdu_1",
		"10",
		"重度改装",
		&spider.Grep2{},
	},
}

func gai_run() {
	c := make(chan string)
	var ch_num = len(rule)
	for i := 0; i < ch_num; i++ {
		sp := spider.NewSpider(rule[i])
		go sp.Run(c)
	}
	//管道消息回归
	for i := 0; i < ch_num; i++ {
		x, ok := <-c
		if ok == false {
			break
		}
		fmt.Println(x) //消息回收处理 可扩展写入文件日志
	}
}

func gai_run1() {
	src := "<DIV style='eee'><script>style</script>ad<br/>fa<img src='fadfa'>df<P>wosp</P></div>"
	src = spider.CleanBody(src)
	fmt.Println(src)

	spider.NewSpider(rule[0])
}

func main() {
	args := os.Args
	if len(args) == 2 {
		switch args[1] {
		case "1":
			gai_run()
		case "2":
			//平台负债表数据静态化
			gai_run()
		case "0":
			os.Exit(0)
		default:
		}
	}
	if len(args) == 1 {
		for {
			fmt.Println("操作目录: ")
			fmt.Println("1、gai-car 蜘蛛。")
			fmt.Println("2、gai-car 蜘蛛。")
			fmt.Println("0、退出。 ")
			inputReader := bufio.NewReader(os.Stdin)
			command, _, _ := inputReader.ReadLine()
			code := string(command)
			switch code {
			case "1":
				gai_run()
			case "2":
				//平台负债表数据静态化
				gai_run()
			case "0":
				os.Exit(0)
			default:
				fmt.Println("default")
			}
			fmt.Println("-------处理完成-------")
		}
	}
}
