package main

import (
	"bufio"
	"fmt"
	"github.com/guoxuivy/spider"
	"os"
	"runtime"
	// "regexp"
)

/**
 * 采集规则
 * 为每个采集规则发起一个协程
 * @param  {[type]} db *sql.DB       [description]
 * @return {[type]}    [description]  480
 */
var rule = []spider.Guize{
	{
		"http://gai001.com/gaizhuangzuoye/waiguangaizhuang/index.php?page=1",
		"10",
		"外观",
		&spider.Grep1{},
	},
	{
		"http://gai001.com/gaizhuangzuoye/dongligaizhuang/index.php?page=1",
		"10",
		"动力",
		&spider.Grep1{},
	},
	{
		"http://www.wanchezhijia.com/zhongdu_1",
		"10",
		"重度改装",
		&spider.Grep2{},
	},
	{
		"http://www.wanchezhijia.com/zhongdu_11",
		"10",
		"重度改装",
		&spider.Grep2{},
	},
	{
		"http://www.wanchezhijia.com/gaizhuangjian_1",
		"10",
		"改装件",
		&spider.Grep2{},
	},
	{
		"http://www.wanchezhijia.com/gaizhuangjian_11",
		"10",
		"改装件",
		&spider.Grep2{},
	},
	{
		"http://www.wanchezhijia.com/gzzs_1",
		"10",
		"改装知识",
		&spider.Grep2{},
	},
	{
		"http://www.wanchezhijia.com/gzzs_11",
		"10",
		"改装知识",
		&spider.Grep2{},
	},
	// {
	// 	"http://www.wanchezhijia.com/jishu_1",
	// 	"4",
	// 	"技术解析",
	// 	&spider.Grep2{},
	// },
}

func gai_run() {
	c := make(chan string, 10)
	var ch_num = len(rule)
	for i := 0; i < ch_num; i++ {
		sp := spider.NewSpider(rule[i])
		go sp.Run(c)
	}
	//管道消息回归
	for i := 0; i < ch_num; i++ {
		x, ok := <-c
		if ok == false {
			break
		}
		fmt.Println(x) //消息回收处理 可扩展写入文件日志
	}
}

func test_run() {
	// src := "<DIV style='eee'><script>style</script>ad<br/>fa<img src='fadfa'>df<P>wosp</P></div>"
	// src = spider.CleanBody(src)
	// fmt.Println(src)

	// url := "http://www.wanchezhijia.com/zhongdu_11"
	// re := regexp.MustCompile(`_([\d]+)`)
	// p := re.FindStringSubmatch(url)
	// page := p[1]
	// url = re.ReplaceAllString(url, "_"+page)
	// fmt.Println(page)
	// fmt.Println(url)

	//spider.NewSpider(rule[0])

	//spider.NewSpider(rule[0]).Run(make(chan string, 10))

	// p := spider.NewPool()
	// p.Add()
}

func main() {
	runtime.GOMAXPROCS(runtime.NumCPU())
	args := os.Args
	if len(args) == 2 {
		switch args[1] {
		case "1":
			gai_run()
		case "2":
			//平台负债表数据静态化
			test_run()
		case "0":
			os.Exit(0)
		default:
		}
	}
	if len(args) == 1 {
		for {
			fmt.Println("操作目录: ")
			fmt.Println("1、gai-car 蜘蛛。")
			fmt.Println("2、gai-car 蜘蛛。")
			fmt.Println("0、退出。 ")
			inputReader := bufio.NewReader(os.Stdin)
			command, _, _ := inputReader.ReadLine()
			code := string(command)
			switch code {
			case "1":
				gai_run()
			case "2":
				//平台负债表数据静态化
				test_run()
			case "0":
				os.Exit(0)
			default:
				fmt.Println("default")
			}
			fmt.Println("-------处理完成-------")
		}
	}
}
